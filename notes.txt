* montrer erreur si email existe déjà / user doesn't exist / wrong password (https://stackoverflow.com/questions/56113778/how-to-handle-firebase-auth-exceptions-on-flutter)

* try the super  key key to solve modifying data in widget (https://flutter.dev/docs/cookbook/navigation/passing-data)
* think of tests
>>> REGISTER > SIGN IN  > CONTENT CREATION & LINKING WITH FIRESTORE
* firebase ios
* validators : nom & prénom : pas de nbrs (chercher internet?)
* keep password likethat?
* ajouter repeter mdp
* keyboardType: TextInputType.emailAddress,
* debugShowCheckedModeBanner: false,
* Color(0xff1F1F1F), Color(0xff145C9E)
* LinearGradient
* Navette + nb pub / pers + biograpgies/facts
* qd demande: pas de heure
* Covoit/Coloc/String attributs of UserModel are String List for the moment. Don't forget to transform them to models

> Utilisateur simple connecté / non connecté > quand connecté: peut ajouter demande Covoit, Coloc etc + 
	paramètre d'utilisateur + création de groupe + status utilisateurs / modérateurs / présidents groupes
> Liaison à Firebase / Firestore + échange de msgs quand envoi d'intérêt + notifications + Nous contacter / Mdp Oublié

> Filtre & recherche par date ds Covoit / par ville  Colocs / par Grp ds Groupes


Rappels:
* Au bout de 4 mois de désactivité, le groupe est automatiquement supprimé
* Liste_Orgs_Publiques

NOTES :
* Providers are a way to create a bridge between the widget tree and data classes
* we're setting a changenotifier provider / a futur provider for the Auth / a streaprovider for wax class