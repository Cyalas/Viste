
// ---- CovoitWidget
class CovoitWidget extends StatefulWidget {
  final UserModel Sender;
  CovoitWidget(this.Sender);

  @override
  _CovoitWidgetState createState() => _CovoitWidgetState(this.Sender);
}

class _CovoitWidgetState extends State<CovoitWidget> {
  _CovoitWidgetState(this.Sender);
  final UserModel Sender;

  @override
  Widget build(BuildContext context) {
    TextTheme textTheme = Theme.of(context).textTheme;
    return Card(
      margin: EdgeInsets.all(5),
      child: Padding(
        padding: const EdgeInsets.symmetric(horizontal: 10,vertical: 5),
        child: Column(
          children: [
            Row(
              mainAxisAlignment: MainAxisAlignment.spaceBetween,
              crossAxisAlignment: CrossAxisAlignment.start,
              children: [
                Image.asset(Icons_paths[Sender.Ecole],scale: 3),
                Text(
                  Sender.Covoits[0].status + ' le ${Sender.Covoits[0].Date}',
                  style: textTheme.headline5,
                ),
                Text(Sender.Covoits[0].DatePubli, style: textTheme.headline6)
                // Container(width: 15)
              ],
            ),
            Row(
              crossAxisAlignment: CrossAxisAlignment.end,
              mainAxisAlignment: MainAxisAlignment.spaceBetween,
              children: [
                Padding(
                  padding: EdgeInsets.fromLTRB(3, 2, 1, 10),
                  child: Image.asset(Icons_paths[Sender.Sexe],scale: 10),
                ),
                SizedBox(width: 5),
                FromTo(Time1: Sender.Covoits[0].FromTime,Ville1: Sender.Covoits[0].FromCity,
                    Time2: Sender.Covoits[0].ToTime ,Ville2: Sender.Covoits[0].ToCity,
                    Date: 'Le ${Sender.Covoits[0].Date}'),
                IconButton(onPressed: (){}, icon: Icon(Icons.send_sharp), color: secondaryColor, iconSize: 30,)
              ],
            ),
          ],
        ),
      ),
    );
  }
}


// --- Coloc Widget
// class ColocWidget extends StatefulWidget {
//   final UserModel Sender;
//   ColocWidget(this.Sender);
//   @override
//   _ColocWidgetState createState() => _ColocWidgetState(this.Sender);
// }
//
// class _ColocWidgetState extends State<ColocWidget> {
//   _ColocWidgetState(this.Sender);
//   final UserModel Sender;
//
//   @override
//   Widget build(BuildContext context) {
//     TextTheme textTheme = Theme.of(context).textTheme;
//     return Card(
//       margin: EdgeInsets.all(5),
//       child: Padding(
//         padding: const EdgeInsets.all(8.0),
//         child: Column(
//           children: [
//             Row(
//               mainAxisAlignment: MainAxisAlignment.spaceBetween,
//               crossAxisAlignment: CrossAxisAlignment.start,
//               children: [
//                 Image.asset(Icons_paths[Sender.Ecole], scale: 3),
//                 Text(
//                   Sender.Colocs[0].status,
//                   style: textTheme.headline5,
//                 ),
//                 Text(Sender.Colocs[0].DatePubli, style: textTheme.headline6)
//               ],
//             ),
//             SizedBox(height: 5),
//             Row(
//               mainAxisAlignment: MainAxisAlignment.spaceBetween,
//               crossAxisAlignment: CrossAxisAlignment.end,
//               children: [
//                 Padding(
//                   padding: EdgeInsets.fromLTRB(3, 2, 1, 10),
//                   child: Image.asset(Icons_paths[Sender.Sexe],scale: 10),
//                 ),
//                 SizedBox(width: 5),
//                 ColocData(ville: Sender.Colocs[0].ville,quartier: Sender.Colocs[0].quartier, budget: Sender.Colocs[0].budget),
//                 IconButton(onPressed: (){}, icon: Icon(Icons.send_sharp), color: secondaryColor, iconSize: 30,)
//               ],
//             )
//           ],
//         ),
//       ),
//     );
//   }
// }



// --- Coloc Data Widget
// Widget ColocDataWidget(BuildContext context, String ville, String quartier, String budget){
//   Container(
//     child: Padding(
//       padding: EdgeInsets.symmetric(horizontal: 10,vertical: 0),
//       child: Column(
//         crossAxisAlignment: CrossAxisAlignment.start,
//         children: [
//           PtTexWidget(context, 'Location Ã  :  $ville'),
//           PtTexWidget(context, 'Proche de  : $quartier'),
//           PtTexWidget(context, 'Budget       : $budget'),
//         ],
//       ),
//     ),
//   );
// }

// PtTex
// class PtTex extends StatelessWidget {
//   final String text;
//   PtTex(this.text);
//
//   @override
//   Widget build(BuildContext context) {
//     TextTheme textTheme = Theme.of(context).textTheme;
//     double txt_size = 200;
//     return Row(
//       children: [
//         SizedBox(width: 3),
//         MyPt(),
//         SizedBox(width: 3),
//         LimitedBox(
//           maxWidth: txt_size,
//           child: Container(
//               // width: txt_size,
//               child: Text(
//                 this.text,
//                 style: textTheme.headline4,
//               )
//           ),
//         ),
//       ],
//     );
//   }
// }



// ----- From To
Widget FromToWidget(BuildContext context, String Date, String Time1, String Ville1, String Time2, String Ville2){
  TextTheme textTheme = Theme.of(context).textTheme;
  double txt_size = 80;
  double time_size= 40;
  return Container(
    child: Padding(
      padding: EdgeInsets.fromLTRB(50, 0, 20,0),
      child: Column(
        children: [
          Row(
            children: [
              Container(
                width: time_size,
                child: Text(
                  Time1,
                  style: textTheme.headline4,
                ),
              ),
              Container(
                height: 10,
                width: 10,
                decoration: BoxDecoration(
                    color: Colors.white.withOpacity(.2),
                    shape: BoxShape.circle,
                    border: Border.all(width: 3, color: secondaryColor)
                ),
              ),
              SizedBox(width: 2),
              Container(
                  width: txt_size,
                  child: Text(
                    Ville1,
                    style: textTheme.headline4,
                  )
              ),
            ],
          ),
          Row(
            children: [
              Container(
                width: time_size+5,
              ),
              Container(
                  height: 30,
                  child: VerticalDivider(thickness: 3, color: secondaryColor, )
              ),
              Container(
                width: txt_size+7,
              ),
            ],
          ),
          Row(
            children: [
              Container(
                  width: time_size,
                  child: Text(
                    Time2,
                    style: textTheme.headline4,
                  )
              ),
              Container(
                height: 10,
                width: 10,
                decoration: BoxDecoration(
                    color: Colors.white.withOpacity(.2),
                    shape: BoxShape.circle,
                    border: Border.all(width: 3, color: secondaryColor)
                ),
              ),
              SizedBox(width: 2),
              Container(
                  width: txt_size,
                  child: Text(
                    Ville2,
                    style: textTheme.headline4,
                  )
              ),
            ],
          ),
        ],
      ),
    ),
  );
}